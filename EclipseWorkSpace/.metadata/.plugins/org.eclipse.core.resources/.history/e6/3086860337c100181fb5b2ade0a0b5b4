package com.gao.test2;

/**
 * @author XX
 *
 *1. 简述 this 关键字作用及特性
this.指向本对象的属性或方法
this（）调用本对象所属的类的构造器

2. 简述static 关键字作用及特性
意为静态的
一开始加载就会存储到内存中，并且只会被加载一次，从属于类，不从属于对象，一直存在，直到程序结束

3. 简述 super 关键作用及特性
super.可以调用父类的对象或者方法
super（）调用父类的构造器

4. 继承中 ,  如果父类子类均有 name 属性 , 公开权限 , 父类变量存储子类对象 , 直接访问该属性  使用的是谁的属性  ?
如果 使用父类的 getName 方法 , 那么使用的是谁的属性
子类的，还是子类的

5. 简述 静态绑定 和 动态绑定 举例说明
静态绑定（前期绑定）：在程序运行前就可以确定的值或确定的调用
当父类和子类有相同属性名时：
父类引用指向子类对象，用的是父类的属性
子类引用指向子类对象，用的是子类的属性
动态绑定（后期绑定）：在程序运行时才可以确定的值或确定的调用，例如多态
当父类和子类有相同的属性名时：
父类引用指向子类对象，用的是子类的属性
子类引用指向子类对象，用的是子类的属性

6. 多态的三个基础
发生继承，发生重写，父类引用指向子类对象

7. 什么是内部类
在类体中或方法体中的类

8. 内部类的种类 有哪些
成员内部类，静态内部类，匿名内部类，局部内部类

9. 简述如何区分 内部类的种类
从修饰符判断，从内部类所在的位置判断，从生成的字节码文件判断

10. 成员内部类 如何访问 外部类中同名的属性  和 方法 
this.+属性名

11. 静态内部类 可以直接访问 外部类的普通属性吗
不可以，因为静态内部类对象存在，外部类对象不一定存在

12. 匿名内部类可以继承吗 
它必须要继承别人的，但自己不能被继承，因为只执行一次

13. 匿名内部类可以可以有构造器吗
不可以，但是可以用方法块来初始化属性

14. 在外部类中如何创建 成员内部类 的对象
先创建外部类对象，然后利用外部类对象创建内部类对象，例如
InnerClass inner = new OuterClass().new InnerClass();

15. 在外部类中如何创建 静态内部类对象
直接创建，例如
OuterClass.InnerClass inner = new OuterClass.InnerClass();  OuterClass可以省略

16. 局部内部类的 作用范围 
作用于方法体
 */
public class 郜创新 {
	
}
