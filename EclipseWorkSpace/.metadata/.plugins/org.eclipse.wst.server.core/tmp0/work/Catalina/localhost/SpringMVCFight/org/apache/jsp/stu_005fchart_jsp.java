/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2018-11-11 11:22:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class stu_005fchart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html style=\"height: 100%\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>学生信息管理与分析系统</title>\r\n");
      out.write("<!-- 引入CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("<!-- 引入JS -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/jquery-1.9.1.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/echarts.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://echarts.baidu.com/gallery/vendors/echarts/echarts.min.js\"></script>\r\n");
      out.write("       <script type=\"text/javascript\" src=\"http://echarts.baidu.com/gallery/vendors/echarts-gl/echarts-gl.min.js\"></script>\r\n");
      out.write("       <script type=\"text/javascript\" src=\"http://echarts.baidu.com/gallery/vendors/echarts-stat/ecStat.min.js\"></script>\r\n");
      out.write("       <script type=\"text/javascript\" src=\"http://echarts.baidu.com/gallery/vendors/echarts/extension/dataTool.min.js\"></script>\r\n");
      out.write("       <script type=\"text/javascript\" src=\"http://echarts.baidu.com/gallery/vendors/echarts/map/js/china.js\"></script>\r\n");
      out.write("       <script type=\"text/javascript\" src=\"http://echarts.baidu.com/gallery/vendors/echarts/map/js/world.js\"></script>\r\n");
      out.write("       <script type=\"text/javascript\" src=\"https://api.map.baidu.com/api?v=2.0&ak=ZUONbpqGBsYGXNIYHicvbAbM\"></script>\r\n");
      out.write("       <script type=\"text/javascript\" src=\"http://echarts.baidu.com/gallery/vendors/echarts/extension/bmap.min.js\"></script>\r\n");
      out.write("       <script type=\"text/javascript\" src=\"http://echarts.baidu.com/gallery/vendors/simplex.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("strong {\r\n");
      out.write("\tfont-size: 50px;\r\n");
      out.write("\tfont-weight: bolder;\r\n");
      out.write("\tcolor: #FF6666;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"height: 100%; margin: 0\">\r\n");
      out.write("\t<div class=\"jumbotron\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<h1>\r\n");
      out.write("\t\t\t\t<span class=\"glyphicon glyphicon-signal\"></span> 学生数据统计<small>2018年高考数据概述</small>\r\n");
      out.write("\t\t\t</h1>\r\n");
      out.write("\t\t\t<h2>\r\n");
      out.write("\t\t\t\t<span class=\"glyphicon glyphicon-cloud\"></span> 高考数据分析\r\n");
      out.write("\t\t\t</h2>\r\n");
      out.write("\t\t\t<p class=\"lead\" style=\"color: #999999;\">\r\n");
      out.write("\t\t\t\t2018年北京各地共有 <strong>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maps['total']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</strong>名学生参加了本次高考;<br />\r\n");
      out.write("\t\t\t\t一本线(550分)<strong>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maps['f']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</strong>人,过二本线(450分)<strong>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maps['s']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</strong>人,\r\n");
      out.write("\t\t\t\t过专科线(250分)有<strong>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maps['t']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</strong>人,落选了<strong>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maps['o']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</strong>人;\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t\t<h2>\r\n");
      out.write("\t\t\t\t<span class=\"glyphicon glyphicon-cloud\"></span> 详细内容请看统计图表\r\n");
      out.write("\t\t\t</h2>\r\n");
      out.write("\t\t\t<h3>\r\n");
      out.write("\t\t\t\t<span class=\"glyphicon glyphicon-stats\"></span>\r\n");
      out.write("\t\t\t\t2018年北京市各区参加考试人数情况统计图\r\n");
      out.write("\t\t\t</h3>\r\n");
      out.write("\t\t\t<div id=\"main\" style=\"width: 1200px; height: 500px;\"></div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t\t$.post(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/stuChart1\",function(result){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar mychart = echarts.init(document.getElementById('main'));\r\n");
      out.write("\t\t\t\t\tvar option = {\r\n");
      out.write("\t\t\t\t\t\t    xAxis: {\r\n");
      out.write("\t\t\t\t\t\t        type: 'category',\r\n");
      out.write("\t\t\t\t\t\t        data: result[0]\r\n");
      out.write("\t\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t\t    yAxis: {\r\n");
      out.write("\t\t\t\t\t\t        type: 'value'\r\n");
      out.write("\t\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t\t    series: [{\r\n");
      out.write("\t\t\t\t\t\t        data: result[1],\r\n");
      out.write("\t\t\t\t\t\t        type: 'bar'\r\n");
      out.write("\t\t\t\t\t\t    }]\r\n");
      out.write("\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\tmychart.setOption(option);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<h3>\r\n");
      out.write("\t\t\t\t<span class=\"glyphicon glyphicon-stats\"></span>\r\n");
      out.write("\t\t\t\t2018年北京市各分数线的占比情况统计图\r\n");
      out.write("\t\t\t</h3>\r\n");
      out.write("\t\t\t<div id=\"main3\" style=\"width: 1200px; height: 500px;\"></div>\r\n");
      out.write("\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t\t$.post(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/stuChart3\",function(result3){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar dom = document.getElementById(\"main3\");\r\n");
      out.write("\t\t\t\t\tvar myChart = echarts.init(dom);\r\n");
      out.write("\t\t\t\t\tvar app = {};\r\n");
      out.write("\t\t\t\t\toption = null;\r\n");
      out.write("\t\t\t\t\toption = {\r\n");
      out.write("\t\t\t\t\t    title : {\r\n");
      out.write("\t\t\t\t\t        text: '统计各分数线的占比情况',\r\n");
      out.write("\t\t\t\t\t        subtext: '纯属虚构',\r\n");
      out.write("\t\t\t\t\t        x:'center'\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    tooltip : {\r\n");
      out.write("\t\t\t\t\t        trigger: 'item',\r\n");
      out.write("\t\t\t\t\t        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    legend: {\r\n");
      out.write("\t\t\t\t\t        orient: 'vertical',\r\n");
      out.write("\t\t\t\t\t        left: 'left',\r\n");
      out.write("\t\t\t\t\t        data: ['一本录取','二本录取','专科录取','未录取']\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    series : [\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            name: '访问来源',\r\n");
      out.write("\t\t\t\t\t            type: 'pie',\r\n");
      out.write("\t\t\t\t\t            radius : '55%',\r\n");
      out.write("\t\t\t\t\t            center: ['50%', '60%'],\r\n");
      out.write("\t\t\t\t\t            data:[\r\n");
      out.write("\t\t\t\t\t                {value:result3[0], name:'一本录取'},\r\n");
      out.write("\t\t\t\t\t                {value:result3[1], name:'二本录取'},\r\n");
      out.write("\t\t\t\t\t                {value:result3[2], name:'专科录取'},\r\n");
      out.write("\t\t\t\t\t                {value:result3[3], name:'未录取'}\r\n");
      out.write("\t\t\t\t\t               \r\n");
      out.write("\t\t\t\t\t            ],\r\n");
      out.write("\t\t\t\t\t            itemStyle: {\r\n");
      out.write("\t\t\t\t\t                emphasis: {\r\n");
      out.write("\t\t\t\t\t                    shadowBlur: 10,\r\n");
      out.write("\t\t\t\t\t                    shadowOffsetX: 0,\r\n");
      out.write("\t\t\t\t\t                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n");
      out.write("\t\t\t\t\t                }\r\n");
      out.write("\t\t\t\t\t            }\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    ]\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t;\r\n");
      out.write("\t\t\t\t\tif (option && typeof option === \"object\") {\r\n");
      out.write("\t\t\t\t\t    myChart.setOption(option, true);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<h3>\r\n");
      out.write("\t\t\t\t<span class=\"glyphicon glyphicon-stats\"></span>\r\n");
      out.write("\t\t\t\t2018年统计每个区的参加考试人数统计图\r\n");
      out.write("\t\t\t</h3>\r\n");
      out.write("\t\t\t<div id=\"main2\" style=\"width: 1300px; height: 500px;\"></div>\r\n");
      out.write("\t\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t\t$.post(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/stuChart2\",function(result2){\r\n");
      out.write("\t\t\t\t\tvar dom = document.getElementById(\"main2\");\r\n");
      out.write("\t\t\t\t\tvar myChart = echarts.init(dom);\r\n");
      out.write("\t\t\t\t\tvar app = {};\r\n");
      out.write("\t\t\t\t\toption = null;\r\n");
      out.write("\t\t\t\t\tvar posList = [\r\n");
      out.write("\t\t\t\t\t    'left', 'right', 'top', 'bottom',\r\n");
      out.write("\t\t\t\t\t    'inside',\r\n");
      out.write("\t\t\t\t\t    'insideTop', 'insideLeft', 'insideRight', 'insideBottom',\r\n");
      out.write("\t\t\t\t\t    'insideTopLeft', 'insideTopRight', 'insideBottomLeft', 'insideBottomRight'\r\n");
      out.write("\t\t\t\t\t];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tapp.configParameters = {\r\n");
      out.write("\t\t\t\t\t    rotate: {\r\n");
      out.write("\t\t\t\t\t        min: -90,\r\n");
      out.write("\t\t\t\t\t        max: 90\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    align: {\r\n");
      out.write("\t\t\t\t\t        options: {\r\n");
      out.write("\t\t\t\t\t            left: 'left',\r\n");
      out.write("\t\t\t\t\t            center: 'center',\r\n");
      out.write("\t\t\t\t\t            right: 'right'\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    verticalAlign: {\r\n");
      out.write("\t\t\t\t\t        options: {\r\n");
      out.write("\t\t\t\t\t            top: 'top',\r\n");
      out.write("\t\t\t\t\t            middle: 'middle',\r\n");
      out.write("\t\t\t\t\t            bottom: 'bottom'\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    position: {\r\n");
      out.write("\t\t\t\t\t        options: echarts.util.reduce(posList, function (map, pos) {\r\n");
      out.write("\t\t\t\t\t            map[pos] = pos;\r\n");
      out.write("\t\t\t\t\t            return map;\r\n");
      out.write("\t\t\t\t\t        }, {})\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    distance: {\r\n");
      out.write("\t\t\t\t\t        min: 0,\r\n");
      out.write("\t\t\t\t\t        max: 100\r\n");
      out.write("\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tapp.config = {\r\n");
      out.write("\t\t\t\t\t    rotate: 90,\r\n");
      out.write("\t\t\t\t\t    align: 'left',\r\n");
      out.write("\t\t\t\t\t    verticalAlign: 'middle',\r\n");
      out.write("\t\t\t\t\t    position: 'insideBottom',\r\n");
      out.write("\t\t\t\t\t    distance: 15,\r\n");
      out.write("\t\t\t\t\t    onChange: function () {\r\n");
      out.write("\t\t\t\t\t        var labelOption = {\r\n");
      out.write("\t\t\t\t\t            normal: {\r\n");
      out.write("\t\t\t\t\t                rotate: app.config.rotate,\r\n");
      out.write("\t\t\t\t\t                align: app.config.align,\r\n");
      out.write("\t\t\t\t\t                verticalAlign: app.config.verticalAlign,\r\n");
      out.write("\t\t\t\t\t                position: app.config.position,\r\n");
      out.write("\t\t\t\t\t                distance: app.config.distance\r\n");
      out.write("\t\t\t\t\t            }\r\n");
      out.write("\t\t\t\t\t        };\r\n");
      out.write("\t\t\t\t\t        myChart.setOption({\r\n");
      out.write("\t\t\t\t\t            series: [{\r\n");
      out.write("\t\t\t\t\t                label: labelOption\r\n");
      out.write("\t\t\t\t\t            }, {\r\n");
      out.write("\t\t\t\t\t                label: labelOption\r\n");
      out.write("\t\t\t\t\t            }, {\r\n");
      out.write("\t\t\t\t\t                label: labelOption\r\n");
      out.write("\t\t\t\t\t            }, {\r\n");
      out.write("\t\t\t\t\t                label: labelOption\r\n");
      out.write("\t\t\t\t\t            }]\r\n");
      out.write("\t\t\t\t\t        });\r\n");
      out.write("\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar labelOption = {\r\n");
      out.write("\t\t\t\t\t    normal: {\r\n");
      out.write("\t\t\t\t\t        show: true,\r\n");
      out.write("\t\t\t\t\t        position: app.config.position,\r\n");
      out.write("\t\t\t\t\t        distance: app.config.distance,\r\n");
      out.write("\t\t\t\t\t        align: app.config.align,\r\n");
      out.write("\t\t\t\t\t        verticalAlign: app.config.verticalAlign,\r\n");
      out.write("\t\t\t\t\t        rotate: app.config.rotate,\r\n");
      out.write("\t\t\t\t\t        formatter: '{c}  {name|{a}}',\r\n");
      out.write("\t\t\t\t\t        fontSize: 16,\r\n");
      out.write("\t\t\t\t\t        rich: {\r\n");
      out.write("\t\t\t\t\t            name: {\r\n");
      out.write("\t\t\t\t\t                textBorderColor: '#fff'\r\n");
      out.write("\t\t\t\t\t            }\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\toption = {\r\n");
      out.write("\t\t\t\t\t    color: ['#003366', '#006699',  '#e5323e'],\r\n");
      out.write("\t\t\t\t\t    tooltip: {\r\n");
      out.write("\t\t\t\t\t        trigger: 'axis',\r\n");
      out.write("\t\t\t\t\t        axisPointer: {\r\n");
      out.write("\t\t\t\t\t            type: 'shadow'\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    legend: {\r\n");
      out.write("\t\t\t\t\t        data: ['一本', '二本', '专科']\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    toolbox: {\r\n");
      out.write("\t\t\t\t\t        show: true,\r\n");
      out.write("\t\t\t\t\t        orient: 'vertical',\r\n");
      out.write("\t\t\t\t\t        left: 'right',\r\n");
      out.write("\t\t\t\t\t        top: 'center',\r\n");
      out.write("\t\t\t\t\t        feature: {\r\n");
      out.write("\t\t\t\t\t            mark: {show: true},\r\n");
      out.write("\t\t\t\t\t            dataView: {show: true, readOnly: false},\r\n");
      out.write("\t\t\t\t\t            magicType: {show: true, type: ['line', 'bar', 'stack', 'tiled']},\r\n");
      out.write("\t\t\t\t\t            restore: {show: true},\r\n");
      out.write("\t\t\t\t\t            saveAsImage: {show: true}\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    calculable: true,\r\n");
      out.write("\t\t\t\t\t    xAxis: [\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            type: 'category',\r\n");
      out.write("\t\t\t\t\t            axisTick: {show: false},\r\n");
      out.write("\t\t\t\t\t            data: result2[0]\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    ],\r\n");
      out.write("\t\t\t\t\t    yAxis: [\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            type: 'value'\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    ],\r\n");
      out.write("\t\t\t\t\t    series: [\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            name: '一本',\r\n");
      out.write("\t\t\t\t\t            type: 'bar',\r\n");
      out.write("\t\t\t\t\t            barGap: 0,\r\n");
      out.write("\t\t\t\t\t            label: labelOption,\r\n");
      out.write("\t\t\t\t\t            data: result2[1]\r\n");
      out.write("\t\t\t\t\t        },\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            name: '二本',\r\n");
      out.write("\t\t\t\t\t            type: 'bar',\r\n");
      out.write("\t\t\t\t\t            label: labelOption,\r\n");
      out.write("\t\t\t\t\t            data: result2[2]\r\n");
      out.write("\t\t\t\t\t        },\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            name: '专科',\r\n");
      out.write("\t\t\t\t\t            type: 'bar',\r\n");
      out.write("\t\t\t\t\t            label: labelOption,\r\n");
      out.write("\t\t\t\t\t            data: result2[3]\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    ]\r\n");
      out.write("\t\t\t\t\t};;\r\n");
      out.write("\t\t\t\t\tif (option && typeof option === \"object\") {\r\n");
      out.write("\t\t\t\t\t    myChart.setOption(option, true);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
