package com.gao.test4;

import java.util.concurrent.locks.ReentrantLock;

public class Test19_fairLock_unfairLock {
	public static void main(String[] args) {
		TestLock tl = new TestLock();
		new Thread(tl,"线程1").start();
		new Thread(tl,"线程2").start();
		new Thread(tl,"线程3").start();
		new Thread(tl,"线程4").start();
		new Thread(tl,"线程5").start();
		
		
		
	}
}
class TestLock implements Runnable{
	ReentrantLock rl = new ReentrantLock();
	@Override
	public void run() {
		
			try {
				System.out.println(Thread.currentThread().getName()+"正在等待");
				rl.lock();
				System.out.println(Thread.currentThread().getName()+"得到锁");
				Thread.sleep(100);
			} catch (Exception e) {
			}finally {
				rl.unlock();
				System.out.println(Thread.currentThread().getName()+"释放锁");
			}
		}
		
	
}