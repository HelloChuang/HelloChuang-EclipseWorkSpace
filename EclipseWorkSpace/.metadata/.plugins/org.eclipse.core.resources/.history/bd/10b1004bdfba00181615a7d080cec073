package com.gao.test;

public class Test15 {
	public static void main(String[] args) {
		
		System.out.println(recursion(3));
		int[] arr = {5,6,3,2,55,43,43,9};
		//selectSortHigh(arr);
		popSortHigh(arr);
		print(arr);
		System.out.println(binarySerch(arr, 5));
		
		System.out.printf("最牛的编号是：%03d%n", 7);
		  System.out.printf("整数分组的效果是：%,d%n", 99899);
	}
	public static int recursion(int x){
		if(x==1)return 1;
		return x+recursion(x-1);
	}
	public static void selectSortHigh(int[] arr){
		int temp = 0;
		for (int i = 0; i < arr.length-1; i++) {
			int minIndex = i;
			for (int j = i+1; j < arr.length; j++) {
				if(arr[minIndex]>arr[j]){
					minIndex = j;
				}
			}
			if(minIndex!=i){
				temp = arr[i];
				arr[i] = arr[minIndex];
				arr[minIndex] = temp;
			}
		}
	}
	public static void popSortLow(int [] arr){
		int  temp = 0;
		for (int i = 0; i < arr.length-1; i++) {
			for (int j = 0; j < arr.length-1; j++) {
				if(arr[j]>arr[j+1]){
					temp = arr[j];
					arr[j] = arr[j+1];
					arr[j+1] = temp;
				}
			}
		}
	}
	public static void popSortHigh(int [] arr){
		int  temp = 0;
		for (int i = 0; i < arr.length-1; i++) {
			boolean b= false;
			for (int j = 0; j < arr.length-1; j++) {
				if(arr[j]>arr[j+1]){
					temp = arr[j];
					arr[j] = arr[j+1];
					arr[j+1] = temp;
					b = true;
				}
			}
			if(!b)return;
		}
	}
	public static int binarySerch(int[] arr,int x){
		int low = 0;
		int high = arr.length-1;
		while(low<=high){
			int midIndex = (low+high)>>1;
		if(x>arr[midIndex])low = midIndex +1;
		else if(x<arr[midIndex])high = midIndex -1;
		else return midIndex;
		}
		return -1;
	}
	public static void print(int [] arr){
		for (int i : arr) {
			System.out.print(i+" ");
		}
		System.out.println();
	}
}
